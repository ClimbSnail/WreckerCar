C51 COMPILER V9.54   ACTION                                                                10/06/2017 13:10:29 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ACTION
OBJECT MODULE PLACED IN action.OBJ
COMPILER INVOKED BY: D:\MDK\C51\BIN\C51.EXE action.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "action.h"
   2          
   3          uint target_pwm_duty[3]= {1500,1500,1500}; //??pwm
   4          static uint cos_pwm[180];//?????????pwm
   5          void Init_cos_pwm();
   6          
   7          void steering_init()//舵机初始化
   8          {
   9   1          Init_cos_pwm();
  10   1      }
  11          
  12          void Init_cos_pwm()//计算各个角度对应的PWM数值
  13          {
  14   1          int i;
  15   1          for( i = 1 ; i<181 ; i++ )
  16   1              cos_pwm[i-1] = (500+i*11.11);
  17   1      }
  18          
  19          
  20          void Change_angle(float x,float z) //计算并更新舵机角度
  21          {
  22   1          if( z >= 0 )
  23   1          {
  24   2              float arm_long=sqrt(x*x+z*z);//?????
  25   2      
  26   2              //计算三个角各自的余弦值
  27   2              float cosa = x/arm_long;
  28   2              float cosb = (105*105+arm_long*arm_long-97*97)/2/105/arm_long;
  29   2              float cosc = (97*97+arm_long*arm_long-105*105)/2/97/arm_long;
  30   2      
  31   2              //计算角度
  32   2              int angle_a = (int)(acos(cosa)*180/3.14);
  33   2              int angle_b = (int)(acos(cosb)*180/3.14);
  34   2              int angle_c = (int)(acos(cosc)*180/3.14);
  35   2      
  36   2              target_pwm_duty[0] = cos_pwm[90 - (angle_a - angle_c)];
  37   2              target_pwm_duty[1] = cos_pwm[90 - (angle_b + angle_c)];
  38   2              target_pwm_duty[2] = cos_pwm[180- angle_a - angle_b ] ;
  39   2      
  40   2              steering_pwm_change();
  41   2          }
  42   1          else
  43   1          {
  44   2              float arm_long=sqrt(x*x+z*z);
  45   2      
  46   2              //计算三个角各自的余弦值
  47   2              float cosa = x/arm_long;
  48   2              float cosb = (arm_long*arm_long+97*97-160*160)/2/97/arm_long;
  49   2              float cosc = (97*97+160*160-arm_long*arm_long)/2/97/160;
  50   2      
  51   2              //计算角度
  52   2              int angle_a = (int)(acos(cosa)*180/3.14);
  53   2              int angle_b = (int)(acos(cosb)*180/3.14);
  54   2              int angle_c = (int)(acos(cosc)*180/3.14);
  55   2      
C51 COMPILER V9.54   ACTION                                                                10/06/2017 13:10:29 PAGE 2   

  56   2              target_pwm_duty[0] = cos_pwm[ angle_c - 90 ];
  57   2              target_pwm_duty[1] = cos_pwm[90 + (angle_b - angle_a)];
  58   2      
  59   2              pwm_change(2,target_pwm_duty[0]+150);
  60   2              pwm_change(3,target_pwm_duty[1]);
  61   2              pwm_change(4,2500);
  62   2              updata_TimingLeft();
  63   2          }
  64   1      }
  65          void steering_pwm_change(void)   //舵机PWM的更新
  66          {
  67   1          pwm_change(2,target_pwm_duty[0]+150);
  68   1          pwm_change(3,target_pwm_duty[1]);
  69   1          pwm_change(4,target_pwm_duty[2]);
  70   1          updata_TimingLeft();  //计算PWM剩余的低电平时间
  71   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1325    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    366      32
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
