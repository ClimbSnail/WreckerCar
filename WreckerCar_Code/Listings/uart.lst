C51 COMPILER V9.54   UART                                                                  12/11/2017 20:18:14 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: D:\MDK\C51\BIN\C51.EXE uart.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\ua
                    -rt.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include "uart.h"
   2          
   3          //uchar message = 0; //消息
   4          //uchar receiveFlag = 0;//接收标志
   5          
   6          //使用独立波特率发生器
   7          void uart_init12M(uint  baudRate)   //串口初始化 2400~57600bps@12MHz
   8          {
   9   1        PCON &= 0x7F;   //波特率不倍速
  10   1        SCON = 0x50;    //8位数据,可变波特率
  11   1        AUXR |= 0x04;   //独立波特率发生器时钟为Fosc,即1T
  12   1      
  13   1        //设定独立波特率发生器重装值
  14   1        switch( baudRate )
  15   1        {
  16   2        case 2400 : BRT = 0x64;break;//2400bps
  17   2        case 4800 : BRT = 0x04;break;//4800bps
  18   2        case 9600 : BRT = 0xD9;break;//9600bps
  19   2        case 19200: BRT = 0xEC;break;//19200bps
  20   2        case 38400: BRT = 0xF6;break;//38400bps
  21   2        case 57600: BRT = 0xF9;break;//57600bps
  22   2        default   : BRT = 0xD9;break;//9600bps
  23   2        }
  24   1            
  25   1        AUXR |= 0x01;   //串口1选择独立波特率发生器为波特率发生器
  26   1        AUXR |= 0x10;   //启动独立波特率发生器
  27   1        ES=1;           //打开接收中断
  28   1        EA=1;           //打开总中断
  29   1      }
  30          
  31          void uart_init110592M(uint baud_rate)   //串口初始化 2400~57600bps@11.0592MHz
  32          {
  33   1        PCON &= 0x7F;   //波特率不倍速
  34   1        SCON = 0x50;    //8位数据,可变波特率
  35   1        AUXR |= 0x04;   //独立波特率发生器时钟为Fosc,即1T
  36   1      
  37   1        //设定独立波特率发生器重装值
  38   1        switch( baud_rate )
  39   1        {
  40   2        case 2400 : BRT = 0x70;break;//2400bps
  41   2        case 4800 : BRT = 0xB8;break;//4800bps
  42   2        case 9600 : BRT = 0xDC;break;//9600bps
  43   2        case 19200: BRT = 0xEE;break;//19200bps
  44   2        case 38400: BRT = 0xF7;break;//38400bps
  45   2        case 57600: BRT = 0xFA;break;//57600bps
  46   2        default   : BRT = 0xDC;break;//9600bps 
  47   2        }
  48   1            
  49   1        AUXR |= 0x01;   //串口1选择独立波特率发生器为波特率发生器
  50   1        AUXR |= 0x10;   //启动独立波特率发生器
  51   1        ES=1;           //打开接收中断
  52   1        EA=1;           //打开总中断
  53   1      }
  54          
C51 COMPILER V9.54   UART                                                                  12/11/2017 20:18:14 PAGE 2   

  55          void UART_send_char(uchar *dat)     //发送字符串
  56          {
  57   1        int i;
  58   1        for(i = 0 ; dat[i] ; i++ )
  59   1        {
  60   2          SBUF = dat[i];   //将要发送的数据放入到发送寄存器
  61   2          while(!TI);     //等待发送数据完成
  62   2          TI=0;       //清除发送完成标志位  
  63   2        }
  64   1        SBUF = 0x0A;
  65   1        while(!TI);     //等待发送数据完成
  66   1        TI=0;       //清除发送完成标志位  
  67   1      }
  68          
  69          void UART_send(uchar dat)     //发送字符
  70          {
  71   1        SBUF = dat;
  72   1        while(!TI);     //等待发送数据完成
  73   1        TI=0;       //清除发送完成标志位  
  74   1      }
  75          
  76          int UART_check(uchar dat)   //奇校验
  77          {
  78   1         uint i,count=0;
  79   1         for( i = 0 ; i<8 ; i++ )
  80   1         {
  81   2          if( dat&0x01 )
  82   2            count++;
  83   2          dat >>= 1;
  84   2         }
  85   1         return count%2;
  86   1      }
  87          
  88          ////串口1中断
  89          //void uart(void) interrupt 4
  90          //{
  91          //  if( RI )
  92          //  {
  93          //    RI = 0;  //接收位清零
  94          //    receiveFlag = 1;//接收标志位置1
  95          //    message = SBUF; 
  96          ////以下程序测试用
  97          ////    SBUF = message;
  98          ////    while(!TI);     //等待发送数据完成
  99          ////    TI=0;       //清除发送完成标志位  
 100          //  }
 101          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    285    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
